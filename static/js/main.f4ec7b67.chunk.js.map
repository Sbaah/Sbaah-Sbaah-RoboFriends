{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/Scroll.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robot","id","alt","name","email","CardList","robots","map","SearchBox","placeholder","searchChange","type","onChange","Scroll","style","overflow","border","height","children","App","onSearchChange","e","setState","searchfield","target","value","state","fetch","then","res","json","users","this","filteredRobots","filter","toString","toLowerCase","includes","toLocaleLowerCase","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAgBeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,sDAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,iBACHC,IAAI,eAEN,mCAAML,EAAMG,MAAMG,QAClB,kCAAKN,EAAMG,MAAMI,aCGRC,G,MATE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCOVO,G,MAbG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,qBAAKZ,UAAU,MAAf,SACE,uBACEA,UAAU,0CACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCEHG,EAVA,SAAChB,GACd,OACE,qBACEiB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGpB,EAAMqB,YC0DEC,G,wDAvDb,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAlBtC,EAAKC,MAAQ,CACXpB,OAAQ,GACRiB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEhB,OAAQyB,S,oBAW9B,WAAS,MAGyBC,KAAKN,MAA7BpB,EAHD,EAGCA,OAAQiB,EAHT,EAGSA,YAKVU,EAAiB3B,EAAO4B,QAAO,SAAClC,GAAD,OACnCA,EAAMG,KACHgC,WACAC,cACAC,SAASd,EAAYY,WAAWG,wBAGrC,OAAQhC,EAAOiC,OAGb,sBAAKzC,UAAU,SAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAcsB,KAAKZ,iBAErB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUd,OAAQ2B,SATtB,+C,GA1CYO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4ec7b67.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img\r\n        src={`https://robohash.org/${props.robot.id}?size=200x200`}\r\n        alt='robotImage'\r\n      />\r\n      <h2> {props.robot.name}</h2>\r\n      <p> {props.robot.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.robots.map((robot) => (\r\n        <Card key={robot.id} robot={robot} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='search pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\nimport CardList from '../components/card-list/card-list.component';\nimport SearchBox from '../components/search-box/search-box.component';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\n// function\nclass App extends Component {\n  // constructor allows access to super() which gives access to this.state={}\n  // will allow to set to a default\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  // customs/class method  onSearchChange/handleChange method\n  // we uses EX 6 arrow function and the unique characteristics about them\n  // ()=>{}\n  onSearchChange = (e) => {\n    this.setState({ searchfield: e.target.value });\n  };\n\n  render() {\n    // destructuring will allows us to pull properties of\n    // an object and set them to the const that is in side of '{}'\n    const { robots, searchfield } = this.state;\n\n    // includes() just check the value that was passed to see if\n    // it exits in the array.\n\n    const filteredRobots = robots.filter((robot) =>\n      robot.name\n        .toString()\n        .toLowerCase()\n        .includes(searchfield.toString().toLocaleLowerCase())\n    );\n\n    return !robots.length ? (\n      <h1> Loading </h1>\n    ) : (\n      <div className='App tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox\n          placeholder='Search Robots'\n          searchChange={this.onSearchChange}\n        />\n        <Scroll>\n          <CardList robots={filteredRobots}></CardList>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}